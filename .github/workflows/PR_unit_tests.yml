# This is a basic workflow to help you get started with Actions

name: PR_unit_tests

# Controls when the workflow will run
on:
  pull_request:
  push:
    branches:
      - 'dev'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  create-cache-and-setup-options:
    name: cache and setup options
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7

      - name: Caching ruby dependencies
        uses: actions/cache@v2
        with:
          path: 'vendor/bundle'
          key: ${{ runner.os }}-gems-${{ secrets.GEMS_CACHE_VERSION }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Caching Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

  lint:
    needs: create-cache-and-setup-options
    name: Run Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check lint
        if: always()
        run: ./gradlew lintRelease --stacktrace

  Unit-test:
    needs: lint
    name: Run unit tests on PR in main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Run unit tests
        run: ./gradlew test --stacktrace

      - name: Upload html test report
        uses: actions/upload-artifact@v2
        with:
          name: index.html
          path: app/build/reports/tests/testDebugUnitTest/index.html

      - name: Upload test report directory
        uses: actions/upload-artifact@v2
        with:
          name: testDebugStuff
          path: app/build/reports/tests/testDebugUnitTest/
          if-no-files-found: warn
